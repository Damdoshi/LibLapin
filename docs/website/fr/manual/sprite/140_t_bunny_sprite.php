<div class="prototype">
  $Ktypedef struct@ $Ts_bunny_sprite@<br />
  {<br />
  $A $Tt_bunny_clipable@ $Sclipable@;<br />
  $A $Kconst@ $Tsize_t@ $S_private@[3];<br />
  $A $Tt_bunny_vector@ *$Sanimation@;<br />
  $A $Tt_bunny_map@ *$Shashname_id@;<br />
  $A $Tint32_t@ $Scurrent_animation@;<br />
  $A $Tuint32_t@ $Scurrent_frame_repeat@;<br />
  $A $Tuint32_t@ $Scurrent_repeat@;<br />
  $A $Tuint32_t@ $Scurrent_frame@;<br />
  $A $Tdouble@ $Scurrent_time@;<br />
  $A $Tbool@ $Sstop_repeat@;<br />
  <br />
  } $Tt_bunny_sprite@;
</div>
<hr />

<div class="resume">
  <h3>Description</h3>
  $A This structure, which is partially abstract,
  represents a full sprite sheet will several animations
  stored and a lot of status variable. It is based on t_bunny_clipable, so
  it can be used with any function that support to take a t_bunny_clipable
  as parameter.<br />
  <br />
  It is generated by bunny_load_sprite and must be delete by bunny_delete_clipable.
  <br />
  <b>
    Some field should definitively be constant and may become on a next version.
    Concerned fields will be noted here.
  </b>
</div>
<hr />

<div class="parameters">
  <h3>Attributes</h3>
  <ul>
    <li>
      $Tt_bunny_clipable@ $Sclipable@:<br />
      $A The clipable which serve as base for the t_bunny_sprite structure.
      Some fields are handled by the sprite mechanisms and should not be modified,
      but most of them can still be used by your program directly.<br />
      Fields you should avoid to edit are:
      <ul>
        <li>clip_x_position</li>
        <li>clip_y_position</li>
        <li>clip_width</li>
        <li>clip_height</li>
      </ul>
    </li>
    <li>
      $Kconst@ $Tsize_t@ $S_private@[3]:<br />
      $A This field contains inner data you should not modify or it may
      make your program crash.
    </li>
    <li>
      $Tt_bunny_vector@ *$Sanimation@:<br />
      $A All animations loaded and stored inside this structure.
      <b>
        This pointer itself will become constant. Do not edit it. You can
        still change the content of the vector.
      </b>
    </li>
    <li>
      $Tt_bunny_map@ *$Shashname_id@:<br />
      $A A map used to store the relation between hash and id. The hash
      being the name written in configuration and the id the position
      in the t_bunny_vector *$Sanimation@.
      <b>
        The pointer itself and the data will become constant.
        Do not edit it.
      </b>
    </li>
    <li>
      $Tint32_t@ $Scurrent_animation@:<br />
      $A The id of the animation currently being played.
    </li>
    <li>
      $Tuint32_t@ $Scurrent_frame_repeat@:<br />
      $A The amount of time the current frame was repeated.
    </li>
    <li>
      $Tuint32_t@ $Scurrent_repeat@:<br />
      $A The amount of time the current animation was repeated.
    </li>
    <li>
      $Tuint32_t@ $Scurrent_frame@:<br />
      $A The frame currently being on display.
    </li>
    <li>
      $Tbool@ $Sstop_repeat@:<br />
      $A If set to true, the animation will not repeat itself
      after its end and the next animation will not be played.
      It will simply stop on the last frame.<br />
      Setting a new animation will set this field to $Cfalse@.
    </li>
  </ul>
</div>
<hr />

<div class="related_functions">
  <h3>Related functions</h3>
  <ul>
    <li>t_bunny_frame_browsing</li>
    <li>t_bunny_sprite_animation</li>
    <li>bunny_load_sprite</li>
    <li>bunny_delete_clipable</li>
  </ul>
</div>

