<div class="prototype">
  Macro
  $Tt_bunny_client@ *$Sbunny_new_client@(
  $Kconst@ $Tchar@ *$Shost@,
  $Tuint16_t@ $Sport@,
  );
</div>
<hr />

<div class="resume">
  <h3>Description</h3>
  $A Create a new client and connect to an host.<br />
  <br />
  The returned client must be deleted with bunny_delete_client.
</div>
<hr />

<div class="parameters">
  <h3>Parameters</h3>
  <ul>
    <li>
      $Kconst@ $Tchar@ *$Shost@:<br />
      $A The host to connect with.
    </li>
    <li>
      $Tuint16_t@ $Sport@:<br />
      $A The port on which the client with listen.
    </li>
  </ul>
</div>
<hr />

<div class="return">
  <h3>Return value</h3>
  <ul>
    <li>
      On $Bsuccess@, the function returns the address of a valid t_bunny_client.
    </li>
    <li>
      On $Bfailure@, it returns $CNULL@.
    </li>
  </ul>
</div>
<hr />

<div class="error_and_log">
  <h3>Error values and logs</h3>
  <p>
    On error, $Vbunny_errno@ is set to:
  </p>
  <br />
  <ul>
    <li>
      $CENOMEM@:<br />
      <p>
        Out of memory.
      </p>
    </li>
    <li>
      Any errno code that can be generated by socket, bind or connect.
    </li>
  </ul>
  <br />
  <p>
    Logs written by this function are tagged with the $L"network"@ label.
  </p>
</div>
<hr />

<div class="details">
  <h3>Additional informations</h3>
  <p>This macro wraps a call to a real function, which is:</p>
  <p>
    $Tt_bunny_client@ *$S_bunny_new_client_opt@(
    $Kconst@ $Tchar@ *$Shost@,
    $Tuint16_t@ $Sport@,
    $Tt_bunny_protocol@ $Sprotocol@
    );
  </p>
  <p>It fill the third parameter with $SBPT_TCP@.</li>
</div>
<hr />

<div class="related_functions">
  <h3>Related functions</h3>
  <ul>
    <li>bunny_new_client_opt</li>
    <li>bunny_delete_client</li>
  </ul>
</div>

